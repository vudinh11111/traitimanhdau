# PersistentVolume v√† PersistentVolumeClaim cho MySQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/mysql"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - nodes-one
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp-3
  template:
    metadata:
      labels:
        app: myapp-3
    spec:
      nodeSelector:
        kubernetes.io/hostname: nodes-one
      containers:
      - name: nginx-container
        image: nginx:latest
        ports:
        - containerPort: 3010
      - name: mysql-container
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "yourpassword123"
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-storage
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service-3
spec:
  selector:
    app: myapp-3
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3306
      nodePort: 31003
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: my-service-3
spec:
  selector:
    app: myapp-3
  ports:
    - protocol: TCP
      port: 3003
      targetPort: 3010
      nodePort: 30003
  type: NodePort
