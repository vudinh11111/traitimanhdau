# PersistentVolume v√† PersistentVolumeClaim cho MySQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-1
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/mysql"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - nodes-one
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp-1
  template:
    metadata:
      labels:
        app: myapp-1
    spec:
      terminationGracePeriodSeconds: 30
      nodeSelector:
        kubernetes.io/hostname: nodes-one
      containers:
      - name: mysql-container-1
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "yourpassword123"
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-storage
      - name: hethonghoc-container
        imagePullPolicy: "Always"
        image: vudinh112/he_thong_hoc:v22
        env:
        - name: MYSQL_HOST
          value: "mysql-service-1"
        ports:
        - containerPort: 8080
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc-1
---
apiVersion: v1
kind: Service
metadata:
  name: my-service-1
spec:
  selector:
    app: myapp-1
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 8080
      nodePort: 30001
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service-1
spec:
  selector:
    app: myapp-1
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3306
      nodePort: 31001
  type: NodePort
